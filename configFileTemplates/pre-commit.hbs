#!/bin/sh

# check the code quality
{{packageManager}} run typecheck &&
{{#if eslint}}
{{packageManager}} run lint &&
{{/if}}
{{#if vitest}}
{{packageManager}} run test
{{/if}}

if [ $? -ne 0 ]; then
    echo "Stopping the commit due to the previous error(s)."
    exit 1
fi

red='\033[0;31m'
cyan='\033[0;36m'
no_color='\033[0m'

# check if the git worktree is clean
uncommitted="$(git status --porcelain | awk '{if (substr($0,2,1) == "M" || substr($0,2,1) == "?") print}')"
if [ ! -z "$uncommitted" ]
then
    printf "${red}Worktree is not clean - there are changes that are not going to be committed.\n\n"
    echo "$uncommitted"
    printf "\n"
    printf "${cyan}If this is okay, you can continue with the commit by using \"--no-verify\" flag with the commit command.\n${no_color}"
    {{#if husky}}
    printf "${cyan}You can also bypass this hook by setting the environment variable HUSKY as 0 (e.g., prefixing the command with \"HUSKY=0\").\n${no_color}"
    {{/if}}
    exit 1
fi
