{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["import { spinner } from '@clack/prompts';\n\nexport type ColorFunc = (str: string | number) => string;\n\nexport interface Template {\n  name: string;\n  label: string;\n  hint: string;\n  color: ColorFunc;\n  templateDir: string;\n  options: TemplateOption[];\n  projectDependencyOverrides?: DependencyOverrides;\n  projectOptions?: string[];\n  recommended?: string[];\n}\n\nexport interface TemplateOption {\n  name: string;\n  label: string;\n  hint: string;\n  customCommand?: string;\n}\n\nexport type Package = string | { package: string; version: string };\n\nexport interface OptionDependency {\n  option?: string;\n  packages: Package[];\n}\n\nexport interface DependencyOverrides {\n  dependencies?: (OptionDependency | Package)[];\n  devDependencies?: (OptionDependency | Package)[];\n  peerDependencies?: (OptionDependency | Package)[];\n}\n\nexport interface DefaultDependencies {\n  dependencies?: string[];\n  devDependencies?: string[];\n  peerDependencies?: string[];\n  withOption?: Record<string, DefaultDependencies>;\n}\n\nexport interface Dependencies {\n  dependencies?: Record<string, string>;\n  devDependencies?: Record<string, string>;\n  peerDependencies?: Record<string, string>;\n}\n\ntype Spinner = typeof spinner;\nexport type SpinnerObject = ReturnType<Spinner>;\n\nexport interface Import {\n  default?: string;\n  named?: string[];\n  source: string;\n}\n\nexport interface TemplateConfig {\n  template?: string;\n  script?: string;\n}\n\nexport interface ConfigureScriptProps {\n  projectName: string;\n  targetDirPath: string;\n  templateDirPath: string;\n  configFileTemplateDirPath: string;\n  options: string[];\n}\n"]}